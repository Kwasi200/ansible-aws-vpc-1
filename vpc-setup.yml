- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC Variables
      include_vars: vp_setup1

    - name: Create vprofile VPC
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: yes
        tenancy: default
        state: "{{state}}"
      register: vpcout

    - debug:
        var: vpcout

    - name: create Public Subnet 1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{ zone1}}"
        state: "{{state}}"
        cidr: "{{PubSub1Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub1
      register: pubsub1_out

    - name: create Public Subnet 2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{ zone2}}"
        state: "{{state}}"
        cidr: "{{PubSub2Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub2
      register: pubsub2_out

    - name: create Public Subnet 3 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{ zone3}}"
        state: "{{state}}"
        cidr: "{{PubSub3Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub3
      register: pubsub3_out

    - name: create Private Subnet 1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{ zone1}}"
        state: "{{state}}"
        cidr: "{{PrivSub1Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-privsub1
      register: privsub1_out

    - name: create Private Subnet 2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{ zone2}}"
        state: "{{state}}"
        cidr: "{{PrivSub2Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-privsub2
      register: privsub2_out

    - name: create Private Subnet 3 in zone3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{ zone3}}"
        state: "{{state}}"
        cidr: "{{PrivSub3Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-privsub3
      register: privsub3_out

    - name: Internet Gateway Setup
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        state: "{{state}}"
        resource_tags:
          Name: vprofile-IGW
      register: igw_out

    - name: Public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        tags:
          Name: vprofile-PubRT
        subnets:
          - "{{pubsub1_out.subnet.id}}"
          - "{{pubsub2_out.subnet.id}}"
          - "{{pubsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_out.gateway_id}}"
      register: pubRT_out


    - name: create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the vpc
      ec2_vpc_nat_gateway:
        subnet_id: "{{ pubsub1_out.subnet.id }}"
        region: "{{ region }}"
        wait: yes
        state: "{{state}}"
        if_exist_do_not_create: true
      register: NatGW_out

    - name: Private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        tags:
          Name: vprofile-PrivRT
        subnets:
          - "{{privsub1_out.subnet.id}}"
          - "{{privsub2_out.subnet.id}}"
          - "{{privsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ NatGW_out.nat_gateway_id }}"
      register: privRT_out

    - debug:
        var: "{{item}}"
      loop:
        - vpcout.vpc.id
        - pubsub1.out.subnet.id
        - pubsub2.out.subnet.id
        - pubsub3.out.subnet.id
        - privsub1.out.subnet.id
        - privsub2.out.subnet.id
        - privsub3.out.subnet.id
        - igw_out.gateway_id
        - pubRT_out.route_table.id
        - NatGW_out.nat_gateway_id
        - privRT_out.route_table.id

    - set_fact:
        vpcid: "{{vpcout.vpc.id}}"
        pubsub1id: "{{pubsub1_out.subnet.id}}"
        pubsub2id: "{{pubsub2_out.subnet.id}}"
        pubsub3id: "{{pubsub3_out.subnet.id}}"
        privsub1id: "{{privsub1_out.subnet.id}}"
        privsub2id: "{{privsub2_out.subnet.id}}"
        privsub3id: "{{privsub3_out.subnet.id}}"
        igwid: "{{ igw_out.gateway_id}}"
        pubRTid: "{{ pubRT_out.route_table.id }}"
        NatGWid: "{{ NatGW_out.nat_gateway_id }}"
        privRTid: "{{ privRT_out.route_table.id }}"
        cacheable: yes

    - name: create variables file for vpc output
      copy:
        content: "vpcid: {{vpcout.vpc.id}}\npubsub1id: {{pubsub1_out.subnet.id}}\npubsub2id: {{pubsub2_out.subnet.id}}\npubsub3id: {{pubsub3_out.subnet.id}}\nprivsub1id: {{privsub1_out.subnet.id}}\nprivsub2id: {{privsub2_out.subnet.id}}\nprivsub3id: {{privsub3_out.subnet.id}}\nigwid: {{ igw_out.gateway_id}}\npubRTid: {{ pubRT_out.route_table.id }}\nNatGWid: {{ NatGW_out.nat_gateway_id }}\nprivRTid: {{ privRT_out.route_table.id }}"
        dest: output_vars


